<!-- Copyright (c) Microsoft Corporation and Contributors. -->
<!-- Licensed under the MIT License. -->

<Page
    x:Class="FastCopy.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FastCopy"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxm="using:Microsoft.UI.Xaml.Media"
    mc:Ignorable="d">

    <Page.Resources>

        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <Style x:Key="SecondaryTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
                    </Style>
                    <SolidColorBrush x:Key="SubgroupHeaderBrush" Color="{StaticResource SystemBaseMediumColor}" />
                    <Color x:Key="CardStrokeColorDefault">#0F000000</Color>
                    <SolidColorBrush x:Key="CardStrokeColorDefaultBrush" Color="{StaticResource CardStrokeColorDefault}" />
                    <StaticResource x:Key="ExpanderHeaderBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <Style x:Key="SecondaryTextBlockStyle" TargetType="TextBlock" />
                    <!--  Do not mess with the foreground color for High Contrast. Let it ride as is.  -->
                    <SolidColorBrush x:Key="SubgroupHeaderBrush" Color="{ThemeResource SystemColorWindowTextColor}" />
                    <StaticResource x:Key="ExpanderHeaderBorderBrush" ResourceKey="SystemColorButtonTextColorBrush" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <Style x:Key="SecondaryTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
                    </Style>
                    <SolidColorBrush x:Key="SubgroupHeaderBrush" Color="{StaticResource SystemBaseMediumColor}" />
                    <Color x:Key="CardStrokeColorDefault">#19000000</Color>
                    <SolidColorBrush x:Key="CardStrokeColorDefaultBrush" Color="{StaticResource CardStrokeColorDefault}" />
                    <StaticResource x:Key="ExpanderHeaderBorderBrush" ResourceKey="CardStrokeColorDefaultBrush" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <Style x:Key="StackPanelInExpanderStyle" TargetType="StackPanel">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="0,12,0,12" />
                <Setter Property="Margin" Value="20,0,0,0"/>
            </Style>

            <Style x:Key="SettingContainerResetButtonStyle" TargetType="Button">
                <Setter Property="Margin" Value="5,0,0,0" />
                <Setter Property="Height" Value="19" />
                <Setter Property="Width" Value="19" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
            </Style>

            <Style x:Key="SettingContainerFontIconStyle" TargetType="FontIcon">
                <Setter Property="Foreground" Value="{StaticResource SystemAccentColor}" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
            </Style>

            <Style x:Key="NonExpanderGrid" TargetType="Grid">
                <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
                <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
                <Setter Property="MinHeight" Value="64" />
                <Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                <Setter Property="Padding" Value="16,0,8,0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
            </Style>

            <Style x:Key="SettingsPageItemHeaderStyle" BasedOn="{StaticResource BodyTextBlockStyle}" TargetType="TextBlock">
                <Setter Property="LineHeight" Value="20" />
                <Setter Property="TextWrapping" Value="WrapWholeWords" />
            </Style>

            <Style x:Key="SettingsPageItemDescriptionStyle" BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,0,24,0" />
                <Setter Property="LineHeight" Value="16" />
                <Setter Property="Foreground" Value="{ThemeResource SubgroupHeaderBrush}" />
                <Setter Property="TextWrapping" Value="WrapWholeWords" />
            </Style>

            <Style TargetType="local:SettingContainer">
                <Setter Property="Margin" Value="0,4,0,0" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="MaxWidth" Value="1000" />
                <Setter Property="ShowReset" Value="Collapsed"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:SettingContainer">
                            <Grid Style="{StaticResource NonExpanderGrid}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentControl Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Symbol}"/>
                                <StackPanel Grid.Column="1" Style="{StaticResource StackPanelInExpanderStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource SettingsPageItemHeaderStyle}"
                                           Text="{TemplateBinding Title}" />
                                        <Button x:Name="ResetButton"
                                            Style="{StaticResource SettingContainerResetButtonStyle}"
                                                Visibility="{TemplateBinding ShowReset}">
                                            <FontIcon Glyph="&#xE845;"
                                              Style="{StaticResource SettingContainerFontIconStyle}" />
                                        </Button>
                                    </StackPanel>
                                    <TextBlock x:Name="HelpTextBlock"
                                       Style="{StaticResource SettingsPageItemDescriptionStyle}"
                                       Text="{TemplateBinding HelpText}" />
                                </StackPanel>
                                <ContentPresenter Grid.Column="2"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding HeaderContent}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="ExpanderSettingContainerStyle" TargetType="local:SettingContainer">
                <Setter Property="MaxWidth" Value="1000" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:SettingContainer">
                            <Expander x:Name="Expander"
                                   Margin="0,4,0,0"
                                   HorizontalAlignment="Stretch"
                                   HorizontalContentAlignment="Stretch"
                                   Content="{TemplateBinding ExpanderContent}">
                                <Expander.ContentTransitions>
                                    <TransitionCollection>
                                        <RepositionThemeTransition/>
                                        <EntranceThemeTransition FromHorizontalOffset="-200" IsStaggeringEnabled="True"/>
                                    </TransitionCollection>
                                </Expander.ContentTransitions>
                                <Expander.Header>
                                    <Grid MinHeight="64" x:Name="ExpanderHeaderGrid">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="3*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentControl Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Symbol}"/>
                                        <StackPanel Grid.Column="1" Style="{StaticResource StackPanelInExpanderStyle}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Style="{StaticResource SettingsPageItemHeaderStyle}"
                                                   Text="{TemplateBinding Title}" />
                                                <Button x:Name="ResetButton"
                                                        Style="{StaticResource SettingContainerResetButtonStyle}"
                                                        Visibility="{TemplateBinding ShowReset}">
                                                    <FontIcon Glyph="&#xE845;"
                                                      Style="{StaticResource SettingContainerFontIconStyle}" />
                                                </Button>
                                            </StackPanel>
                                            <TextBlock x:Name="HelpTextBlock"
                                               Style="{StaticResource SettingsPageItemDescriptionStyle}"
                                               Text="{TemplateBinding HelpText}" />
                                        </StackPanel>
                                        <ContentControl Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{TemplateBinding HeaderContent}">
                                            <ContentControl.ContentTransitions>
                                                <TransitionCollection>
                                                    <RepositionThemeTransition/>
                                                    <EntranceThemeTransition FromHorizontalOffset="-200" IsStaggeringEnabled="True"/>
                                                </TransitionCollection>
                                            </ContentControl.ContentTransitions>
                                        </ContentControl>
                                    </Grid>
                                </Expander.Header>
                            </Expander>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <x:String x:Key="NavigationFontIcon">&#xE76C;</x:String>

            <Style x:Key="NavigationFontIconStyle" TargetType="FontIcon">
                <Setter Property="Margin" Value="20,0,8,0"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="Black"/>
                <Setter Property="Glyph" Value="{StaticResource NavigationFontIcon}"/>
            </Style>

            <x:String x:Key="DefaultSkinTitleText">Skin hitsound</x:String>


            <x:String x:Key="NoModShortName">None</x:String>
            <x:String x:Key="NoModLongName">NoMod</x:String>
            <x:String x:Key="DoubleTimeShortName">DT</x:String>
            <x:String x:Key="DoubleTimeLongName">DoubleTime</x:String>
            <x:String x:Key="NightCoreShortName">NC</x:String>
            <x:String x:Key="NightCoreLongName">NightCore</x:String>
            <x:String x:Key="HalfTimeShortName">HT</x:String>
            <x:String x:Key="HalfTimeLongName">HalfTime</x:String>

            <x:String x:Key="OsuPathIconGlyph">&#xF12B;</x:String>
            <x:String x:Key="NewFolderIconGlyph">&#xE8F4;</x:String>
            <x:String x:Key="ThemeIconGlyph">&#xE790;</x:String>
            <x:String x:Key="PlayModIconGlyph">&#xEC57;</x:String>
            <x:String x:Key="SkinIconGlyph">&#xE7F6;</x:String>
            <x:String x:Key="HitsoundIconGlyph">&#xE8D6;</x:String>
            <x:String x:Key="LinkIconGlyph">&#xE71B;</x:String>
            <x:String x:Key="JumpListIconGlyph">&#xE728;</x:String>
            <x:String x:Key="ExperimentalIconGlyph">&#xE7BA;</x:String>
            <x:String x:Key="AboutIconGlyph">&#xF6FA;</x:String>

            <Style x:Key="ToggleSwitchLeftLabelStyle" TargetType="ToggleSwitch">
                <Setter Property="Foreground" Value="{ThemeResource ToggleSwitchContentForeground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="ManipulationMode" Value="System,TranslateX"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleSwitch">
                            <Grid Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="StrokeThickness">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ToggleStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" GeneratedDuration="0" To="On">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" GeneratedDuration="0" To="Off">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OnToOffTransition" From="On" GeneratedDuration="0" To="Off">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OffToOnTransition" From="Off" GeneratedDuration="0" To="On">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Dragging"/>
                                        <VisualState x:Name="Off"/>
                                        <VisualState x:Name="On">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="KnobTranslateTransform" To="24" Storyboard.TargetProperty="X"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ContentStates">
                                        <VisualState x:Name="OffContent">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="OffContentPresenter" To="1" Storyboard.TargetProperty="Opacity"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>True</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OnContent">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="OnContentPresenter" To="1" Storyboard.TargetProperty="Opacity"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>True</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="HeaderContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource ToggleSwitchHeaderForeground}" IsHitTestVisible="False" Margin="{ThemeResource ToggleSwitchTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                                <Grid HorizontalAlignment="Left" MinWidth="{StaticResource ToggleSwitchThemeMinWidth}" Grid.Row="1" VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MaxWidth="12" Width="12"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{ThemeResource ToggleSwitchPreContentMargin}"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="{ThemeResource ToggleSwitchPostContentMargin}"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="SwitchAreaGrid" Background="{ThemeResource ToggleSwitchContainerBackground}" Grid.ColumnSpan="3" Control.IsTemplateFocusTarget="True" Margin="0,5" Grid.RowSpan="3"/>
                                    <ContentPresenter x:Name="OffContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OffContentTemplate}" Grid.Column="0" Content="{TemplateBinding OffContent}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="OnContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OnContentTemplate}" Grid.Column="0" Content="{TemplateBinding OnContent}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="OuterBorder" Grid.Column="2" Fill="{ThemeResource ToggleSwitchFillOff}" Height="20" Grid.Row="1" RadiusX="10" RadiusY="10" Stroke="{ThemeResource ToggleSwitchStrokeOff}" StrokeThickness="2" Width="44"/>
                                    <Rectangle x:Name="SwitchKnobBounds" Grid.Column="2" Fill="{ThemeResource ToggleSwitchFillOn}" Height="20" Opacity="0" Grid.Row="1" RadiusX="10" RadiusY="10" Stroke="{ThemeResource ToggleSwitchStrokeOn}" StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" Width="44"/>
                                    <Grid x:Name="SwitchKnob" Grid.Column="2" HorizontalAlignment="Left" Height="20" Grid.Row="1" Width="20">
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="KnobTranslateTransform"/>
                                        </Grid.RenderTransform>
                                        <Ellipse x:Name="SwitchKnobOn" Fill="{ThemeResource ToggleSwitchKnobFillOn}" Height="10" Opacity="0" Width="10"/>
                                        <Ellipse x:Name="SwitchKnobOff" Fill="{ThemeResource ToggleSwitchKnobFillOff}" Height="10" Width="10"/>
                                    </Grid>
                                    <Thumb x:Name="SwitchThumb" AutomationProperties.AccessibilityView="Raw" Grid.ColumnSpan="3" Grid.RowSpan="3">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="Transparent"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpanderExpandedStyle" TargetType="Expander">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}"/>
                <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}"/>
                <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}"/>
                <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Expander">
                            <Grid MaxWidth="{TemplateBinding MaxWidth}" MinWidth="{TemplateBinding MinWidth}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="Row0" Height="Auto"/>
                                    <RowDefinition x:Name="Row1" Height="*"/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ExpandStates">
                                        <VisualState x:Name="ExpandUp">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding TemplateSettings.ContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" KeySpline="0.0, 0.0, 0.0, 1.0" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CollapseDown">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.167" KeySpline="1.0, 1.0, 0.0, 1.0" Value="{Binding TemplateSettings.ContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ExpandDown">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" KeySpline="0.0, 0.0, 0.0, 1.0" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CollapseUp">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.167" KeySpline="1.0, 1.0, 0.0, 1.0" Value="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpandDirectionStates">
                                        <VisualState x:Name="Down"/>
                                        <VisualState x:Name="Up">
                                            <VisualState.Setters>
                                                <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}"/>
                                                <Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}"/>
                                                <Setter Target="ExpanderHeader.(Grid.Row)" Value="1"/>
                                                <Setter Target="ExpanderContentClip.(Grid.Row)" Value="0"/>
                                                <Setter Target="Row0.Height" Value="*"/>
                                                <Setter Target="Row1.Height" Value="Auto"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Button x:Name="ExpanderHeader" AutomationProperties.AutomationId="ExpanderToggleButton" Background="{ThemeResource ExpanderHeaderBackground}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}" IsEnabled="{TemplateBinding IsEnabled}" MinHeight="{TemplateBinding MinHeight}" Padding="{StaticResource ExpanderHeaderPadding}" VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"/>
                                <Border x:Name="ExpanderContentClip" Grid.Row="1">
                                    <Border x:Name="ExpanderContent" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource ExpanderContentDownBorderThickness}" HorizontalAlignment="Stretch" MinHeight="{TemplateBinding MinHeight}" Padding="{TemplateBinding Padding}" VerticalAlignment="Stretch" Visibility="Collapsed">
                                        <Border.RenderTransform>
                                            <CompositeTransform/>
                                        </Border.RenderTransform>
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--                            Real resources begins here               -->
            <DataTemplate x:Key="FolderTemplate" x:DataType="local:ExplorerItem">
                <TreeViewItem ItemsSource="{x:Bind Children}" IsExpanded="True">
                    <StackPanel Orientation="Horizontal">
                        <SymbolIcon Symbol="Folder"/>
                        <TextBlock Margin="20,0,0,0" Text="{x:Bind Name}"/>
                        <SymbolIcon Symbol="Accept" Foreground="Green" Visibility="{x:Bind IsFinished, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <SymbolIcon Symbol="Clear" Foreground="Red" Visibility="{x:Bind IsFailed, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </StackPanel>

                    <TreeViewItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Name="RemoveItemMenuItem" Text="Remove from list" Click="RemoveItemMenuItem_Click"/>
                            <MenuFlyoutItem x:Name="RenameMenuItem" Text="Rename" Click="RenameMenuItem_Click"/>
                        </MenuFlyout>
                    </TreeViewItem.ContextFlyout>
                </TreeViewItem>
            </DataTemplate>

            <DataTemplate x:Key="FileTemplate" x:DataType="local:ExplorerItem">
                <TreeViewItem>
                    <StackPanel Orientation="Horizontal">
                        <SymbolIcon Symbol="Document"/>
                        <TextBlock Margin="20,0,0,0" Text="{x:Bind Name}"/>
                        <SymbolIcon Symbol="Accept" Foreground="Green" Visibility="{x:Bind IsFinished,Mode=OneWay}" />
                        <SymbolIcon Symbol="Clear" Foreground="Red" Visibility="{x:Bind IsFailed, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <TextBlock Margin="10,0,0,0" Text="{x:Bind Size, Converter={StaticResource NumberToStringConverter}, Mode=OneWay}"/>
                    </StackPanel>

                    <TreeViewItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Name="RemoveItemMenuItem" Text="Remove from list" Click="RemoveItemMenuItem_Click"/>
                            <MenuFlyoutItem x:Name="RenameMenuItem" Text="Rename" Click="RenameMenuItem_Click"/>
                            <MenuFlyoutItem x:Name="OpenLocationMenuItem" Text="Open file location" Click="{x:Bind OpenLocation}"/>
                        </MenuFlyout>
                    </TreeViewItem.ContextFlyout>
                </TreeViewItem>
            </DataTemplate>

            <local:ExplorerItemTemplateSelector x:Key="ExplorerItemTemplateSelector"
                                                        FolderTemplate="{StaticResource FolderTemplate}"
                                                        FileTemplate="{StaticResource FileTemplate}"/>
            <local:VectorToBoolConverter x:Key="VectorToBoolConverter"/>
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <muxm:AcrylicBrush x:Key="MenuAcrylic"  TintOpacity="0.5" TintLuminosityOpacity="0.4" TintColor="White"/>
            <local:NumberToStringConverter x:Key="NumberToStringConverter"/>

            <SolidColorBrush x:Key="ExpanderHeaderTextBrush" Color="{ThemeResource SystemBaseMediumColor}"/>
        </ResourceDictionary>
        
    </Page.Resources>

    <StackPanel>
        <local:SettingContainer Title="操作" HelpText="复制或移动">
            <local:SettingContainer.Symbol>
                <SymbolIcon Symbol="Copy"/>
            </local:SettingContainer.Symbol>
            <local:SettingContainer.HeaderContent>
                <DropDownButton x:Name="ModeButton" Content="Mode">
                    <DropDownButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyout.MenuFlyoutPresenterStyle>
                                <Style TargetType="MenuFlyoutPresenter">
                                    <Setter Property="Background" Value="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"/>
                                </Style>
                            </MenuFlyout.MenuFlyoutPresenterStyle>
                            <MenuFlyoutItem x:Name="CopyModeItem" Text="Copy" Click="CopyModeItem_Click" Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"/>
                            <MenuFlyoutItem x:Name="MoveModeItem" Text="Move" Click="MoveModeItem_Click" Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"/>
                            <MenuFlyoutItem x:Name="CustomModeItem" Text="Custom" Click="CustomModeItem_Click"/>
                        </MenuFlyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </local:SettingContainer.HeaderContent>
        </local:SettingContainer>

        <local:SettingContainer x:Name="LastSetting" Title="开发者模式" HelpText="高级选项，供专业人士使用" Style="{StaticResource ExpanderSettingContainerStyle}">
            <local:SettingContainer.Symbol>
                <SymbolIcon Symbol="Repair"/>
            </local:SettingContainer.Symbol>
            <local:SettingContainer.HeaderContent>
                <ToggleSwitch x:Name="AdvancedMode" Style="{StaticResource ToggleSwitchLeftLabelStyle}" Margin="0,0,-45,0"/>
            </local:SettingContainer.HeaderContent>
            <local:SettingContainer.ExpanderContent>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Style x:Key="SwitchTextStyle" TargetType="TextBlock">
                            <Style.Setters>
                                <Setter Property="Margin" Value="47,0,0,0"/>
                            </Style.Setters>
                        </Style>
                    </Grid.Resources>

                    <!-- /A -->
                    <TextBlock Style="{StaticResource SwitchTextStyle}" Text="只复制有存档属性的文件，但不改变存档属性" VerticalAlignment="Center"  Grid.Row="0" Grid.Column="0"/>
                    <ToggleSwitch Style="{StaticResource ToggleSwitchLeftLabelStyle}" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right"/>

                    <!-- /S -->
                    <TextBlock Style="{StaticResource SwitchTextStyle}" Text="复制目录和子目录"/>

                    <!-- /D:m-d-y-->
                    <TextBlock Style="{StaticResource SwitchTextStyle}" Text="复制在指定日期或指定日期以后改变的文件。如果没有提供日期，只复制那些源时间比目标时间新的文件" Grid.Row="1" Grid.Column="0"/>
                    <TimePicker Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right"/>
                    
                    

                </Grid>
            </local:SettingContainer.ExpanderContent>
        </local:SettingContainer>

        <Grid HorizontalAlignment="Stretch" MaxWidth="1000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Expander HorizontalAlignment="Stretch" Grid.Column="0" Height="500" Style="{StaticResource ExpanderExpandedStyle}" IsExpanded="True">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <SymbolIcon Symbol="Send" Grid.Column="0"/>
                        <TextBlock Margin="16,0,0,0" VerticalAlignment="Center" Text="来源" Grid.Column="1"/>
                        <DropDownButton Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,10,0" Content="打开">
                            <DropDownButton.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    
                                    <MenuFlyoutItem Text="打开文件" Click="MenuFlyoutItem_Click">
                                        <MenuFlyoutItem.Icon>
                                            <SymbolIcon Symbol="Document"/>
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutItem Text="打开文件夹" Click="MenuFlyoutItem_Click_1">
                                        <MenuFlyoutItem.Icon>
                                            <SymbolIcon Symbol="Folder"/>
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                </MenuFlyout>
                            </DropDownButton.Flyout>
                        </DropDownButton>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <TreeView x:Name="SourceTree" VerticalAlignment="Stretch" HorizontalAlignment="Left" ItemsSource="{x:Bind ViewModel.Sources}" ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}"/>
                </Expander.Content>
            </Expander>

            <Expander HorizontalAlignment="Stretch" Grid.Column="1" Height="500" Style="{StaticResource ExpanderExpandedStyle}" IsExpanded="True">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <SymbolIcon Symbol="Send" Grid.Column="0"/>
                        <TextBlock Margin="16,0,0,0" VerticalAlignment="Center" Text="目标预览" Grid.Column="1"/>
                        <TextBlock Text="{x:Bind ViewModel.Destination, Mode=OneWay}" Margin="20,0,0,0"/>
                        <Button x:Name="ChangeDestinationButton" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,10,0" Click="ChangeDestinationButton_Click">打开</Button>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <TreeView x:Name="Destination" VerticalAlignment="Stretch" ItemsSource="{x:Bind ViewModel.Preview}" ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}"/>
                </Expander.Content>
            </Expander>
        </Grid>

        <Grid HorizontalAlignment="Center" Margin="0,10,0,0" MaxWidth="1000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Background="Transparent" BorderThickness="0" Click="{x:Bind ViewModel.Execute}" IsEnabled="{x:Bind ViewModel.IsExecutable, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="Play"/>
                    <TextBlock Margin="10,0,0,0" Text="开始复制"/>
                </StackPanel>
            </Button>

            <ProgressBar Margin="50,0,0,0" Grid.Column="1" Width="2000" HorizontalAlignment="Stretch"/>
        </Grid>
    </StackPanel>
    
    <!--<ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="300"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>



                <Expander HorizontalAlignment="Stretch" Grid.Column="0">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Common mode: " VerticalAlignment="Center"/>
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <ListView ItemsSource="{x:Bind ViewModel.Flags}" IsEnabled="{x:Bind ViewModel.IsCustomEnabled, Mode=OneWay}">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="local:XCopyFlags">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Content="{x:Bind Flag}" IsChecked="{x:Bind Enabled}"/>
                                        <TextBlock Text="{x:Bind Description}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Expander.Content>
                </Expander>

                <StackPanel Orientation="Vertical" Grid.Column="1" Margin="20, 0, 10, 0">
                    <NumberBox Header="Number of Threads: " Value="{x:Bind ViewModel.ProcessCount, Mode=TwoWay}" SpinButtonPlacementMode="Compact" SmallChange="1" LargeChange="1" Minimum="1"/>
                </StackPanel>
            </Grid>

            </Grid>
        </Grid>
    </ScrollViewer>-->
    

</Page>
